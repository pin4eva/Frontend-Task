{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// import { AppThunk, RootState } from \"..\";\n// const initialState:IProducts = {\n//     id: 0,\n//   picture: \"\",\n//   name: \"\",\n//   description: \"\",\n//   type: {\n//     id: 0,\n//     name: \"\",\n//   },\n//   categories: [],\n//   implementationEffortText: \"\",\n//   investmentEffort: \"\",\n//   trl: { id: 0, name: \"\" },\n//   user: {\n//     id: 0,\n//     lastName: \"\",\n//     firstName: \"\",\n//     email: \"\",\n//     position: \"\",\n//     profilePicture: \"\",\n//     sex: 0,\n//   },\n//   company: {\n//     // id:null,\n//     address: {\n//       cityRegion: null,\n//       country: {\n//         name: \"\",\n//         region: \"\",\n//       },\n//       fallbackString: null,\n//       house: \"\",\n//       city: {\n//         name: \"\",\n//         countryId: \"\",\n//         stateId: \"\",\n//       },\n//       latitude: \"\",\n//       longitude: \"\",\n//       state: \"\",\n//       street: \"\",\n//       zipCode: \"\",\n//       id: null,\n//     },\n//     logo: \"\",\n//     name: \"\",\n//   },\n//   businessModels: [],\n// };\nexport const ProductReducer = createSlice({\n  name: \"product\",\n  initialState: {\n    products: [],\n    product: {}\n  },\n  reducers: {\n    GET_PRODUCTS: (state, action) => {\n      state.products = action.payload;\n    },\n    GET_PRODUCT: (state, action) => {\n      state.product = action.payload;\n    }\n  }\n});\nexport const {\n  GET_PRODUCT,\n  GET_PRODUCTS\n} = ProductReducer.actions;\nexport default ProductReducer.reducer;","map":{"version":3,"sources":["/home/peter/Desktop/frontend-task/src/store/reducers/productReducer.ts"],"names":["createSlice","ProductReducer","name","initialState","products","product","reducers","GET_PRODUCTS","state","action","payload","GET_PRODUCT","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,cAAc,GAAGD,WAAW,CAAC;AACxCE,EAAAA,IAAI,EAAE,SADkC;AAExCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,OAAO,EAAE;AAFG,GAF0B;AAMxCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAuC;AACnDD,MAAAA,KAAK,CAACJ,QAAN,GAAiBK,MAAM,CAACC,OAAxB;AACD,KAHO;AAIRC,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAuC;AAClDD,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACC,OAAvB;AACD;AANO;AAN8B,CAAD,CAAlC;AAgBP,OAAO,MAAM;AAAEC,EAAAA,WAAF;AAAeJ,EAAAA;AAAf,IAAgCN,cAAc,CAACW,OAArD;AAEP,eAAeX,cAAc,CAACY,OAA9B","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { IProducts } from \"types/product.types\";\n// import { AppThunk, RootState } from \"..\";\n\n// const initialState:IProducts = {\n//     id: 0,\n//   picture: \"\",\n//   name: \"\",\n//   description: \"\",\n//   type: {\n//     id: 0,\n//     name: \"\",\n//   },\n//   categories: [],\n//   implementationEffortText: \"\",\n//   investmentEffort: \"\",\n//   trl: { id: 0, name: \"\" },\n//   user: {\n//     id: 0,\n//     lastName: \"\",\n//     firstName: \"\",\n//     email: \"\",\n//     position: \"\",\n//     profilePicture: \"\",\n//     sex: 0,\n//   },\n//   company: {\n//     // id:null,\n//     address: {\n//       cityRegion: null,\n//       country: {\n//         name: \"\",\n//         region: \"\",\n//       },\n//       fallbackString: null,\n//       house: \"\",\n//       city: {\n//         name: \"\",\n//         countryId: \"\",\n//         stateId: \"\",\n//       },\n//       latitude: \"\",\n//       longitude: \"\",\n//       state: \"\",\n//       street: \"\",\n//       zipCode: \"\",\n//       id: null,\n//     },\n//     logo: \"\",\n//     name: \"\",\n//   },\n//   businessModels: [],\n// };\n\nexport const ProductReducer = createSlice({\n  name: \"product\",\n  initialState: {\n    products: [],\n    product: {},\n  },\n  reducers: {\n    GET_PRODUCTS: (state, action: PayloadAction<any>) => {\n      state.products = action.payload;\n    },\n    GET_PRODUCT: (state, action: PayloadAction<any>) => {\n      state.product = action.payload;\n    },\n  },\n});\n\nexport const { GET_PRODUCT, GET_PRODUCTS } = ProductReducer.actions;\n\nexport default ProductReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}